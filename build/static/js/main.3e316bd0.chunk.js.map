{"version":3,"sources":["UI/NavBar.js","hooks/use-renderData.js","UI/Banner.js","hooks/use-http.js","UI/type_movie/MovieDetail.js","UI/type_movie/MovieItem.js","UI/MovieList.js","pages/browse/Browse.jsx","UI/SearchForm.js","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","useState","colorNavBar","setColorNavBar","window","onscroll","scrollY","className","href","to","width","height","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","useRenderDataHook","renderDataFn","data","loading","error","moviesData","length","Banner","props","console","log","movieData","originalFilm","renderData","map","style","backgroundImage","backdrop_path","key","id","name","overview","Fragment","useHttpHook","isLoading","setIsLoading","setError","sendRequest","useCallback","apiLink","processDataFn","fetch","response","ok","Error","json","messagge","MovieDetail","trailerData","setTrailerData","fetchTrailerData","idTrailer","useEffect","results","movieInfo","isOriginals","title","first_air_date","release_date","vote_average","displayTrailer","videoData","site","toLowerCase","type","movieBackdrop","src","poster_path","alt","movieTrailer","videoId","opts","playerVars","autoplay","myRef","useRef","isScroll","current","scrollIntoView","ref","MovieItem","infoMovieData","setInfoMovieData","display","setDisplay","setIDTrailer","displayMovieDetailHandler","event","idMovie","Number","target","filter","movie","prevState","original_title","first_air_data","release_data","movieItem","listData","isPoster","onClick","resetDisplayValue","isTitle","MovieList","originalsMovieData","loadingOriginal","errorOriginal","trendingMovieData","loadingTrending","errorTrending","topRatedMovieData","loadingTopRated","errorTopRated","actionMovieData","loadingAction","errorAction","comedyMovieData","loadingComedy","errorComedy","horrorMovieData","loadingHorror","errorHorror","romanceMovieData","loadingRomance","errorRomance","documentariesMovieData","loadingDocumentaries","errorDocumentaries","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","Browse","originalsMovieBannerData","setOriginalsMovieBannerData","originalsMovieListData","setOriginalsMovieListData","setTrendingMovieData","setTopRatedMovieData","setActionMovieData","setComedyMovieData","setHorrorMovieData","setRomanceMovieData","setDocumentariesMovieData","originalsMovieLoading","originalsMovieError","trendingMovieLoading","trendingMovieError","topRatedMovieLoading","topRatedMovieError","actionMovieLoading","actionMovieError","fetchAction","comedyMovieLoading","comedyMovieError","fetchComedy","horrorMovieLoading","horrorMovieError","fetchHorror","romanceMovieLoading","romanceMovieError","fetchRomance","documentariesMovieLoading","documentariesMovieError","Math","floor","random","SearchForm","nameEntered","setNameEntered","htmlFor","onChange","value","icon","faSearch","storeNameEntered","storeDisplayStateValue","preventDefault","Search","queryName","setQueryName","setMovieData","displayStateValue","setDisplayStateValue","fetchMovieData","App","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3e316bd0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  const [colorNavBar, setColorNavBar] = useState(\r\n    \"container-flud pb-2 navbar-container color-transparent\"\r\n  );\r\n\r\n  const changeColorHandler = () => {\r\n    if (window.scrollY > 1) {\r\n      setColorNavBar(\r\n        \"container-flud pb-2 navbar-container color-black animation-appear\"\r\n      );\r\n    } else\r\n      setColorNavBar(\r\n        \"container-flud pb-2 navbar-container color-transparent animation-disappear\"\r\n      );\r\n  };\r\n\r\n  window.onscroll = function () {\r\n    changeColorHandler();\r\n  };\r\n\r\n  return (\r\n    <div className={colorNavBar}>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <a href=\"/\" className=\"app-name mt-3 ms-4 text-danger\">\r\n          Movie App\r\n        </a>\r\n\r\n        <Link to=\"/search\">\r\n          <svg\r\n            className=\"search-icon svg-inline--fa fa-search fa-w-16 mt-3 me-5\"\r\n            width=\"30px\"\r\n            height=\"30px\"\r\n            fill=\"#ccc\"\r\n            aria-hidden=\"true\"\r\n            data-prefix=\"fas\"\r\n            data-icon=\"search\"\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 512 512\"\r\n          >\r\n            <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n          </svg>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst useRenderDataHook = (renderDataFn, data, loading, error) => {\r\n  let moviesData = <p className=\"text-danger\">Found no movies.</p>;\r\n\r\n  if (data.length > 0) {\r\n    moviesData = renderDataFn(data);\r\n  }\r\n  if (error) {\r\n    moviesData = <p className=\"text-danger\">{error}</p>;\r\n  }\r\n  if (loading) {\r\n    moviesData = <p className=\"text-danger\">Loading...</p>;\r\n  }\r\n\r\n  return moviesData;\r\n};\r\n\r\nexport default useRenderDataHook;\r\n","import React from \"react\";\r\nimport useRenderDataHook from \"../hooks/use-renderData\";\r\n\r\nconst Banner = (props) => {\r\n  console.log(props.movieData);\r\n\r\n  const renderBannerFn = (renderData) => {\r\n    return renderData.map((data) => {\r\n      return (\r\n        <div\r\n          className=\"banner-container background-center\"\r\n          style={{\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${data.backdrop_path})`,\r\n          }}\r\n          key={data.id}\r\n        >\r\n          {/* <p className=\"banner-name\">{data.name}</p> */}\r\n          <div className=\"banner-info text-white\">\r\n            <p className=\"banner-name\">{data.name}</p>\r\n            <div className=\"banner-info-box\">\r\n              <div className=\"d-flex banner-button\">\r\n                <button className=\"me-3 mb-1\">Play</button>\r\n                <button className=\"mb-1\">My List</button>\r\n              </div>\r\n              <p className=\"banner-overview\">{data.overview}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  const originalFilm = useRenderDataHook(\r\n    renderBannerFn,\r\n    props.movieData,\r\n    props.loading,\r\n    props.error\r\n  );\r\n\r\n  return <React.Fragment>{originalFilm}</React.Fragment>;\r\n};\r\n\r\nexport default Banner;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nconst useHttpHook = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(async (apiLink, processDataFn) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(apiLink);\r\n      if (!response.ok) throw new Error(\"Can't loading movies!\");\r\n\r\n      const data = await response.json();\r\n\r\n      processDataFn(data);\r\n    } catch (error) {\r\n      setError(error.messagge || \"Something went wrong!\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\n\r\nexport default useHttpHook;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport useHttpHook from \"../../hooks/use-http\";\r\n\r\nconst MovieDetail = (props) => {\r\n  console.log(props.movieData);\r\n  const [trailerData, setTrailerData] = useState([]);\r\n  const { error, sendRequest: fetchTrailerData } = useHttpHook();\r\n\r\n  const apiLink = `https://api.themoviedb.org/3/movie/${props.idTrailer}/videos?api_key=a211d22bb5d4917ee91235c99b23e6aa`;\r\n\r\n  //fetch trailer movie data\r\n  useEffect(() => {\r\n    const getTrailerDataFn = (data) => {\r\n      setTrailerData(data.results);\r\n    };\r\n\r\n    fetchTrailerData(apiLink, getTrailerDataFn);\r\n  }, [fetchTrailerData, props.idTrailer, apiLink]);\r\n  // console.log(trailerData);\r\n\r\n  //\r\n  const movieInfo = (\r\n    <div className=\"movieInfo-container col-12 col-md-6\">\r\n      <h2 className=\"movieInfo-name\">\r\n        {props.isOriginals\r\n          ? props.movieData[0].name\r\n          : props.movieData[0].title || props.movieData[0].name}\r\n        {/* Ở giá trị khi props.isOriginals là false, ta đặt 1 phép Or 2 giá trị vì một số ít movie ở mục Trending (movie vừa là trending, vừa là originals) có data trả về khác với các data còn lại*/}\r\n      </h2>\r\n      <hr className=\"white-line\" />\r\n      <h6 className=\"movieInfo-releaseDate mb-0\">\r\n        Release Date:{\" \"}\r\n        {props.isOriginals\r\n          ? props.movieData[0].first_air_date\r\n          : props.movieData[0].release_date ||\r\n            props.movieData[0].first_air_date}\r\n        {/* Ở giá trị khi props.isOriginals là false, ta đặt 1 phép Or 2 giá trị vì một số ít movie ở mục Trending (vừa là trending, vừa là originals) có data trả về khác với các data còn lại*/}\r\n      </h6>\r\n      <h6 className=\"movieInfo-vote\">\r\n        Vote: {props.movieData[0].vote_average}/10\r\n      </h6>\r\n      <p className=\"movieInfo-overview\">{props.movieData[0].overview}</p>\r\n    </div>\r\n  );\r\n\r\n  const opts = {\r\n    height: \"400\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n  let displayTrailer = false;\r\n  let videoData = trailerData;\r\n  if (videoData.length > 0) {\r\n    videoData = videoData[0];\r\n    if (\r\n      videoData.site.toLowerCase() === \"youtube\" &&\r\n      (videoData.type.toLowerCase() === \"trailer\" ||\r\n        videoData.type.toLowerCase() === \"teaser\")\r\n    )\r\n      displayTrailer = true;\r\n  }\r\n\r\n  console.log(videoData);\r\n  console.log(displayTrailer);\r\n\r\n  const movieBackdrop = (\r\n    <img\r\n      src={`https://image.tmdb.org/t/p/original${\r\n        props.movieData[0].backdrop_path || props.movieData[0].poster_path\r\n      }`}\r\n      // dùng phép or ở kết quả tham chiếu trong src vì 1 số ít data movie có backdrop_path = null => dùng poster_path thay thế\r\n      alt={\r\n        props.isOriginals ? props.movieData[0].name : props.movieData[0].title\r\n      }\r\n      className=\"movieTrailer-backdrop\"\r\n    />\r\n  );\r\n\r\n  const movieTrailer = (\r\n    <div className=\"movieTrailer-container col-12 col-md-6\">\r\n      {displayTrailer && !error && (\r\n        <YouTube className=\"\" videoId={videoData.key} opts={opts} />\r\n      )}\r\n      {(!displayTrailer || error) && movieBackdrop}\r\n      {/* nếu load video gặp error thì hiển thị ảnh backdrop  */}\r\n    </div>\r\n  );\r\n\r\n  //Scroll tới MovieDetail bằng useRef và useEffect: CHỈ ÁP DỤNG Ở Search Component. Vì nếu dùng ở Browser, Navbar sẽ che mất title của film\r\n  const myRef = useRef(null);\r\n  useEffect(() => {\r\n    const executeScroll = () => myRef.current.scrollIntoView();\r\n\r\n    //chỉ thực thi hàm với props.isScroll= false, vì chỉ ở Search Component thì isSCroll = false\r\n    if (!props.isScroll) executeScroll();\r\n  }, [props.movieData, props.isScroll]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.isScroll && (\r\n        <div className=\"movieDetail-container row\">\r\n          {movieInfo}\r\n          {movieTrailer}\r\n        </div>\r\n      )}\r\n      {!props.isScroll && (\r\n        <div className=\"movieDetail-container row pb-5\" ref={myRef}>\r\n          {movieInfo}\r\n          {movieTrailer}\r\n        </div>\r\n      )}\r\n      ;\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport useRenderDataHook from \"../../hooks/use-renderData\";\r\nimport MovieDetail from \"./MovieDetail\";\r\n\r\nconst MovieItem = (props) => {\r\n  const [infoMovieData, setInfoMovieData] = useState([]);\r\n  const [display, setDisplay] = useState(false); //true: hiển thị MovieDetail - false: ẩn MovieDetail\r\n  const [idTrailer, setIDTrailer] = useState(0);\r\n\r\n  const displayMovieDetailHandler = (event) => {\r\n    const idMovie = Number(event.target.id);\r\n    // console.log(idMovie);\r\n    let [data] = infoMovieData;\r\n    if (!data) data = props.movieData.filter((movie) => movie.id === idMovie); //đặt giá trị data ở lần đầu tiên click vào film (các lần sau giá trị data sẽ được cập nhật theo trạng thái infoMovieData). NHờ vào phép so sánh ở dưới, Việc này làm cho lần click đầu tiên 1 film bất kỳ sẽ hiển thị thông tin film đó\r\n    if (data.id === idMovie) setDisplay((prevState) => !prevState);\r\n    else setDisplay(true);\r\n\r\n    //Vì data fetch về từ trang search và từ trang browser khác nhau nên phải biến đổi data từ trang search về dạng giống như data từ trang browser\r\n    if (!props.isScroll)\r\n      setInfoMovieData(\r\n        props.movieData\r\n          .filter((movie) => movie.id === idMovie)\r\n          .map((data) => {\r\n            return {\r\n              id: data.id,\r\n              name: data.original_title,\r\n              first_air_data: data.release_data,\r\n              vote_average: data.vote_average,\r\n              overview: data.overview,\r\n              backdrop_path: data.backdrop_path,\r\n              poster_path: data.poster_path,\r\n            };\r\n          })\r\n      );\r\n    else\r\n      setInfoMovieData(props.movieData.filter((movie) => movie.id === idMovie));\r\n\r\n    setIDTrailer(idMovie);\r\n    console.log(infoMovieData);\r\n  };\r\n\r\n  const renderMovieListFn = (listData) => {\r\n    return listData.map((data) => {\r\n      return (\r\n        <img\r\n          className={`${\r\n            props.isPoster ? \"poster\" : \"backdrop\"\r\n          } transition m-2 text-white`}\r\n          id={data.id}\r\n          src={`https://image.tmdb.org/t/p/original${\r\n            props.isPoster ? data.poster_path : data.backdrop_path\r\n          }`}\r\n          alt={data.title}\r\n          key={data.id}\r\n          onClick={displayMovieDetailHandler}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const movieItem = useRenderDataHook(\r\n    renderMovieListFn,\r\n    props.movieData,\r\n    props.loading,\r\n    props.error\r\n  );\r\n\r\n  ////////LƯU Ý://////////\r\n  //HÀM NÀY CHỈ ÁP DỤNG VỚI Search component: khi ấn nút Reset thì sẽ ẩn MovieDetail Component. Vì khi ấn Reset, giá trị props.resetDisplayValue thay đổi => đặt giá trị display =false\r\n  useEffect(() => {\r\n    setDisplay(false);\r\n  }, [props.resetDisplayValue]);\r\n  ////////////////////////////////\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"movie-container\">\r\n        {props.isTitle && (\r\n          <p className=\"movieItem-title ms-4\">{props.isTitle}</p>\r\n        )}\r\n        <div\r\n          className={`${\r\n            props.isScroll\r\n              ? \"movieItem-scroll-container\"\r\n              : \"movieItem-box-container\"\r\n          } pb-2`}\r\n        >\r\n          {movieItem}\r\n        </div>\r\n      </div>\r\n\r\n      {display && (\r\n        <MovieDetail\r\n          movieData={infoMovieData}\r\n          isOriginals={props.isPoster}\r\n          idTrailer={idTrailer}\r\n          isScroll={props.isScroll}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\nimport MovieItem from \"./type_movie/MovieItem\";\r\n\r\nconst MovieList = (props) => {\r\n  // console.log(props.trendingMovieData);\r\n  // console.log(props.trendingMovieData);\r\n  return (\r\n    <div className=\"movieList-container\">\r\n      <MovieItem\r\n        movieData={props.originalsMovieData}\r\n        loading={props.loadingOriginal}\r\n        error={props.errorOriginal}\r\n        isTitle={false}\r\n        isPoster={true} //true: hiển thị ảnh film dưới dạng poster\r\n        isScroll={true} //true: hiển thị danh sách theo kiểu scroll ngang\r\n      />\r\n\r\n      <MovieItem\r\n        movieData={props.trendingMovieData}\r\n        loading={props.loadingTrending}\r\n        error={props.errorTrending}\r\n        isTitle={\"Xu hướng\"}\r\n        isPoster={false} //false: hiển thị ảnh film dưới dạng backdrop\r\n        isScroll={true}\r\n      />\r\n\r\n      <MovieItem\r\n        movieData={props.topRatedMovieData}\r\n        loading={props.loadingTopRated}\r\n        error={props.errorTopRated}\r\n        isTitle={\"Xếp hạng cao\"}\r\n        isPoster={false} //false: hiển thị ảnh film dưới dạng backdrop\r\n        isScroll={true}\r\n      />\r\n\r\n      <MovieItem\r\n        movieData={props.actionMovieData}\r\n        loading={props.loadingAction}\r\n        error={props.errorAction}\r\n        isTitle={\"Hành động\"}\r\n        isPoster={false} //false: hiển thị ảnh film dưới dạng backdrop\r\n        isScroll={true}\r\n      />\r\n\r\n      <MovieItem\r\n        movieData={props.comedyMovieData}\r\n        loading={props.loadingComedy}\r\n        error={props.errorComedy}\r\n        isTitle={\"Hài\"}\r\n        isPoster={false} //false: hiển thị ảnh film dưới dạng backdrop\r\n        isScroll={true}\r\n      />\r\n\r\n      <MovieItem\r\n        movieData={props.horrorMovieData}\r\n        loading={props.loadingHorror}\r\n        error={props.errorHorror}\r\n        isTitle={\"Kinh dị\"}\r\n        isPoster={false} //false: hiển thị ảnh film dưới dạng backdrop\r\n        isScroll={true}\r\n      />\r\n\r\n      <MovieItem\r\n        movieData={props.romanceMovieData}\r\n        loading={props.loadingRomance}\r\n        error={props.errorRomance}\r\n        isTitle={\"Lãng mạn\"}\r\n        isPoster={false} //false: hiển thị ảnh film dưới dạng backdrop\r\n        isScroll={true}\r\n      />\r\n\r\n      <MovieItem\r\n        movieData={props.documentariesMovieData}\r\n        loading={props.loadingDocumentaries}\r\n        error={props.errorDocumentaries}\r\n        isTitle={\"Tài liệu\"}\r\n        isPoster={false} //false: hiển thị ảnh film dưới dạng backdrop\r\n        isScroll={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../UI/NavBar\";\nimport Banner from \"../../UI/Banner\";\nimport MovieList from \"../../UI/MovieList\";\nimport useHttpHook from \"../../hooks/use-http\";\n\nconst API_KEY = \"a211d22bb5d4917ee91235c99b23e6aa\";\n\nconst requests = {\n  fetchTrending: `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_network=123`,\n  fetchTopRated: `https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  fetchSearch: `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US`,\n};\n\nfunction Browse() {\n  const [originalsMovieBannerData, setOriginalsMovieBannerData] = useState([]);\n  const [originalsMovieListData, setOriginalsMovieListData] = useState([]);\n  const [trendingMovieData, setTrendingMovieData] = useState([]);\n  const [topRatedMovieData, setTopRatedMovieData] = useState([]);\n  const [actionMovieData, setActionMovieData] = useState([]);\n  const [comedyMovieData, setComedyMovieData] = useState([]);\n  const [horrorMovieData, setHorrorMovieData] = useState([]);\n  const [romanceMovieData, setRomanceMovieData] = useState([]);\n  const [documentariesMovieData, setDocumentariesMovieData] = useState([]);\n\n  const {\n    isLoading: originalsMovieLoading,\n    error: originalsMovieError,\n    sendRequest: fetchNetflixOriginals,\n  } = useHttpHook();\n\n  const {\n    isLoading: trendingMovieLoading,\n    error: trendingMovieError,\n    sendRequest: fetchTrending,\n  } = useHttpHook();\n\n  const {\n    isLoading: topRatedMovieLoading,\n    error: topRatedMovieError,\n    sendRequest: fetchTopRated,\n  } = useHttpHook();\n\n  const {\n    isLoading: actionMovieLoading,\n    error: actionMovieError,\n    sendRequest: fetchAction,\n  } = useHttpHook();\n\n  const {\n    isLoading: comedyMovieLoading,\n    error: comedyMovieError,\n    sendRequest: fetchComedy,\n  } = useHttpHook();\n\n  const {\n    isLoading: horrorMovieLoading,\n    error: horrorMovieError,\n    sendRequest: fetchHorror,\n  } = useHttpHook();\n\n  const {\n    isLoading: romanceMovieLoading,\n    error: romanceMovieError,\n    sendRequest: fetchRomance,\n  } = useHttpHook();\n\n  const {\n    isLoading: documentariesMovieLoading,\n    error: documentariesMovieError,\n    sendRequest: fetchDocumentaries,\n  } = useHttpHook();\n\n  //fetch data original movies\n  useEffect(() => {\n    const processOriginalsMovieDataFn = (data) => {\n      setOriginalsMovieBannerData([\n        data.results[Math.floor(Math.random() * data.results.length - 1)],\n      ]); // chỉ lấy data 1 film\n      setOriginalsMovieListData(data.results); // lấy data của tất cả film\n    };\n\n    fetchNetflixOriginals(\n      requests.fetchNetflixOriginals,\n      processOriginalsMovieDataFn\n    );\n\n    // const processTrendingMovieDataFn = (data) => {\n    //   setTrendingMovieData(data.results);\n    // };\n\n    // fetchTrending(requests.fetchTrending, processTrendingMovieDataFn);\n\n    // const processTopRatedDataFn = (data) => {\n    //   setTopRatedMovieData(data.results);\n    // };\n\n    // fetchTopRated(requests.fetchTopRated, processTopRatedDataFn);\n  }, [fetchNetflixOriginals]);\n  // console.log(originalsMovieListData);\n\n  //fetch data original movies\n  useEffect(() => {\n    const processTrendingMovieDataFn = (data) => {\n      setTrendingMovieData(data.results);\n    };\n\n    fetchTrending(requests.fetchTrending, processTrendingMovieDataFn);\n  }, [fetchTrending]);\n  // console.log(trendingMovieData);\n\n  //fetch data top rate movies\n  useEffect(() => {\n    const processTopRatedDataFn = (data) => {\n      setTopRatedMovieData(data.results);\n    };\n\n    fetchTopRated(requests.fetchTopRated, processTopRatedDataFn);\n  }, [fetchTopRated]);\n\n  //fetch data action movies\n  useEffect(() => {\n    const processActionDataFn = (data) => {\n      setActionMovieData(data.results);\n    };\n\n    fetchAction(requests.fetchActionMovies, processActionDataFn);\n  }, [fetchAction]);\n\n  //fetch data comedy movies\n  useEffect(() => {\n    const processComedyDataFn = (data) => {\n      setComedyMovieData(data.results);\n    };\n\n    fetchComedy(requests.fetchComedyMovies, processComedyDataFn);\n  }, [fetchComedy]);\n\n  //fetch data Horror movies\n  useEffect(() => {\n    const processHorrorDataFn = (data) => {\n      setHorrorMovieData(data.results);\n    };\n\n    fetchHorror(requests.fetchHorrorMovies, processHorrorDataFn);\n  }, [fetchHorror]);\n\n  //fetch data Romance movies\n  useEffect(() => {\n    const processRomanceDataFn = (data) => {\n      setRomanceMovieData(data.results);\n    };\n\n    fetchRomance(requests.fetchRomanceMovies, processRomanceDataFn);\n  }, [fetchRomance]);\n\n  //fetch data Documentaries movies\n  useEffect(() => {\n    const processDocumentariesDataFn = (data) => {\n      setDocumentariesMovieData(data.results);\n    };\n\n    fetchDocumentaries(requests.fetchDocumentaries, processDocumentariesDataFn);\n  }, [fetchDocumentaries]);\n\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Banner\n        movieData={originalsMovieBannerData}\n        loading={originalsMovieLoading}\n        error={originalsMovieError}\n      />\n      <MovieList\n        originalsMovieData={originalsMovieListData}\n        loadingOriginal={originalsMovieLoading}\n        errorOriginal={originalsMovieError}\n        //\n        trendingMovieData={trendingMovieData}\n        loadingTrending={trendingMovieLoading}\n        errorTrending={trendingMovieError}\n        //\n        topRatedMovieData={topRatedMovieData}\n        loadingTopRated={topRatedMovieLoading}\n        errorTopRated={topRatedMovieError}\n        //\n        actionMovieData={actionMovieData}\n        loadingAction={actionMovieLoading}\n        errorAction={actionMovieError}\n        //\n        comedyMovieData={comedyMovieData}\n        loadingComedy={comedyMovieLoading}\n        errorComedy={comedyMovieError}\n        //\n        horrorMovieData={horrorMovieData}\n        loadingHorror={horrorMovieLoading}\n        errorHorror={horrorMovieError}\n        //\n        romanceMovieData={romanceMovieData}\n        loadingRomance={romanceMovieLoading}\n        errorRomance={romanceMovieError}\n        //\n        documentariesMovieData={documentariesMovieData}\n        loadingDocumentaries={documentariesMovieLoading}\n        errorDocumentaries={documentariesMovieError}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default Browse;\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst SearchForm = (props) => {\r\n  const [nameEntered, setNameEntered] = useState(\"\");\r\n  const movieNameChangeHandler = (event) => {\r\n    setNameEntered(event.target.value);\r\n  };\r\n\r\n  const searchMovieNameHandler = (event) => {\r\n    event.preventDefault();\r\n    props.storeNameEntered(nameEntered);\r\n  };\r\n\r\n  const resetNameEnteredHandler = () => {\r\n    console.log(\"reset\");\r\n    setNameEntered(\"\");\r\n    props.storeNameEntered(\"\");\r\n    props.storeDisplayStateValue(); // khi ấn nút Reset thì kích hoạt hàm, hàm này sẽ đảo giá trị displayStateValue state ở Search component\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchForm-container d-flex justify-content-center\">\r\n      <form className=\"searchForm-form align-self-center\">\r\n        <div className=\"search-box row mt-2\">\r\n          <label htmlFor=\"name-movie\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"name-movie\"\r\n              className=\"searchForm-input col-10\"\r\n              onChange={movieNameChangeHandler}\r\n              value={nameEntered}\r\n            />\r\n            <FontAwesomeIcon icon={faSearch} className=\"search-icon col-2\" />\r\n          </label>\r\n        </div>\r\n        <hr className=\"searchForm-line mt-1\" />\r\n        <div className=\"button-container d-sm-flex justify-content-end\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"reset-btn button me-1\"\r\n            onClick={resetNameEnteredHandler}\r\n          >\r\n            RESET\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"search-btn button\"\r\n            onClick={searchMovieNameHandler}\r\n          >\r\n            SEARCH\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../UI/NavBar\";\nimport SearchForm from \"../../UI/SearchForm\";\nimport useHttpHook from \"../../hooks/use-http\";\nimport MovieItem from \"../../UI/type_movie/MovieItem\";\n\nconst Search = () => {\n  const [queryName, setQueryName] = useState(\"\");\n  const [movieData, setMovieData] = useState([]);\n  const [displayStateValue, setDisplayStateValue] = useState(true); // trạng thái này dùng để ẩn MovieDetail component mỗi khi ấn nút Reset: Khi ấn nút Reset, giá trị displayStateValue thay đổi (bằng cách đảo giá trị displayStateValue) => dùng useEffect để ẩn MovieDetail component\n\n  const getNameEnteredFromSearchForm = (nameEntered) => {\n    setQueryName(nameEntered);\n    console.log(queryName);\n  };\n\n  //hàm đảo giá trị displayStateValue\n  const getDisplayStateValueHandler = () => {\n    setDisplayStateValue((prevState) => !prevState); //đảo giá trị displayStateValue\n  };\n\n  const { sendRequest: fetchMovieData } = useHttpHook();\n\n  const apiLink = `https://api.themoviedb.org/3/search/movie?api_key=a211d22bb5d4917ee91235c99b23e6aa&language=en-US&query=${queryName}&page=1`;\n\n  useEffect(() => {\n    const getMovieNameFn = (data) => {\n      setMovieData(data.results);\n\n      // setQueryName(\"\");\n    };\n\n    fetchMovieData(apiLink, getMovieNameFn);\n  }, [fetchMovieData, apiLink]);\n\n  useEffect(() => {\n    if (!queryName) setMovieData([]);\n  }, [queryName]);\n  console.log(movieData);\n\n  return (\n    <div className=\"searchPage-container\">\n      <NavBar />\n      <SearchForm\n        storeNameEntered={getNameEnteredFromSearchForm}\n        storeDisplayStateValue={getDisplayStateValueHandler}\n      />\n      <MovieItem\n        movieData={movieData}\n        isTitle={\"Search Results\"}\n        isPoster={true} //false: hiển thị ảnh film dưới dạng backdrop\n        isScroll={false}\n        resetDisplayValue={displayStateValue}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Browse from \"./pages/browse/Browse\";\nimport Search from \"./pages/search/Search\";\n\n// tocken = a211d22bb5d4917ee91235c99b23e6aa\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Browse />} />\n        <Route path=\"/search\" element={<Search />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}